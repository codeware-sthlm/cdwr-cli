{
  "plugins": ["import"],
  "extends": ["oclif", "oclif-typescript"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        // always try to resolve types under `<root>@types` directory
        // even it doesn't contain any source code, like `@types/unist`
        "alwaysTryTypes": true,
        "project": "<root>/tsconfig.json"
      }
    }
  },
  "rules": {
    "arrow-parens": ["error", "always"],
    "comma-dangle": ["error", "never"],
    // turn on errors for missing imports
    "import/no-unresolved": "error",
    "indent": ["error", 2, { "MemberExpression": 1 }],
    "node/no-missing-import": "off",
    "object-curly-spacing": ["error", "always"],
    "operator-linebreak": [
      "error",
      "after",
      { "overrides": { "?": "before", ":": "before" } }
    ],
    "semi": ["error", "always"]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.js"],
      "rules": {
        "sort-imports": [
          "error",
          {
            "ignoreCase": false,
            "ignoreDeclarationSort": true,
            "ignoreMemberSort": false,
            "memberSyntaxSortOrder": ["none", "all", "multiple", "single"],
            "allowSeparatedGroups": true
          }
        ],
        "import/order": [
          "error",
          {
            "groups": [
              "builtin",
              "external",
              "internal",
              ["sibling", "parent"],
              "index",
              "unknown"
            ],
            "pathGroups": [
              {
                "pattern": "@cdwr/**",
                "group": "internal",
                "position": "before"
              },
              {
                "pattern": "./**",
                "group": "index",
                "position": "after"
              }
            ],
            "pathGroupsExcludedImportTypes": ["builtin"],
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ]
      }
    },
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {}
    }
  ]
}
